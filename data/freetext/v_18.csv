lfdn,v_18
139,Building of economic models for comparing and prioritizing requirements.   Predicting the business impact of future software capabilities.   Observing user behaviour and connecting it to previous and future requirements.   Visualising requirements and business goals and their interconnections.   Deriving requirements from business goals.   Formally proving the adherence of a system to non-functional requirements. 
156,"I think that the community is to focused in producing short term results for scientific publications. In general, experiments are fictitious and irrelevant, and conducted in very controlled environments. I think that research shall move towards conducting large experiments in the industry and present the results of the application of methods and notations in more real non-controlled environments. I currently see the RE community as a very closed family in which novel ideas are not welcomed.  Same authors on same topics year after year, with very little chance for real experiences to be presented. "
158,Find better ways for healthcare practitioners/IT to be aware of and involved in requirements activities.
160,Reducing ambiguity that arises from unexplicated conflict
171,"Study real-life projects and identify issues that actually caused problems. Then find out how better requirments could have helped. Much research deals with internal consistency of requirements, formalisms, etc. In my experience, this is not where the problems are."
173,"1) Derive Software Requirements from System Requirements. I do not know any proper, research based method which guide people in the industry here!  2) A research based guidance how to treat the different categories of requirements (not the levels!!!). E.g. a process requirement will have not traceability into the technical implementation etc.  3) A research based argumentation where and when natural language requirements are useful and where not"
194,I would say: Please analyze the documentation of our past projects to find subsystems and conditions where requirements were unstable and erroneous.     NOTE: I doubt that managers would give access to such documentation or that they would be happy to know that the causes of problems were not some technical issues but incompetent people or wrong planing decisions. 
197,"(Semi)-Automated support for standard RE activities. A many more automatical methods shall support and ease the work of RE. Especially for standardised requirements, security, safety, traceability analysis,etc. "
204,Develop methods for extracting familiar ideas from the documented requirements and stakeholders' comments and transforming informal stakeholder requests into formal requirements.
207,Understanding and staying within the scope of the system
216,Modelling the enterprise that is responsible for creating the product.
221,What related effort and thereforce produced costs do we have when we are establishing professional RE in a kind of  standard project ? Measure this essential will provide us in comparison in a  non-RE  project what qualitiy improvements and cost reduction we can actually obtain
224,
226,"Develop elicitation tools that function like video games, so that respondant thinks about the requirements in terms of why they need the requirement to 'win her/his game'"
238,How to define the right granularity of requirements -  are there any guidelines for different phases of the project? 
240,"Easy way to document features exact and unambigously, perhaps build in templates in requirements documentation software, perhaps better automated checks on consistency and disambuigity."
243,"RE should be teached at any university, may be by practitioners"
244,Sichere Merkmale zur Typisierung von Requirements  erarbeiten
247,"They should know the customer side (even hidden stakeholders), Keep a professional distance to requirements and Analyse them to the bone, Keep an open mind that requirements can be just the top of an iceberg with 80% not covered by defined requirements; to let them enjoy my professional guidance, I would recommend them to let me know their negative experiences."
253,Stakeholder participation
262,"a clear and precise description and analysis of the problem domain  focus on the problems and the benefits, why these problems should be solved  what is needed to solve the problem on a higher level of abstraction"
269,Industry standards that are conveyed to the E-level so that they see the value of requirements.  It seems to be a constant fight in many companies I have consulted with to pay for the time to properly gather and maintain requirements.
282,"I think one of the main areas of concern is hearing the voice of the user, overcoming the problem of the user's failing to adequately articulate their needs.  This would include interdisciplinary research in the fields of cognitive psychology, decision analysis (e.g., Decision Trees), software design (problem definition)."
285,Make sure that the identified user needs are both comprehensive in a sense of covering both explicit and implicit scenarios and well aligned with the business goals.
291,I'd like to see research into the relationships between the requirements specified for each perspective in the Zachman framework and those of other perspectives.
296,How to best apply professional requirement engineering together with agile development methods.
298,what prevents REs to negotiate requirements more/better. What negotiation approaches are used? 
299,Tools currently in use for the requirements process
306,"1.We face a lot problems with RE and ALM tools. There are several tools but until non of this tools realy covers our requirements. Do research and identify common requirements fir these tools. Developer new tools and integrate additional tools as they are build in phd thesisis.  2. Do more research in specific business domains and provide domain specific reports how RE can be done and how to face domain specific challanges.  3. Include technology changes in the RE research. How do we need to change RE processes, documents,... If we change the software architecture (monolit, soa, microservice, cloud,...). "
310,"The main issue is to make research around practical methods and techniques for doing requirements elicitation, requirements specification, and requirements validation. Focus within Software Engineering (Requirements Engineering) is on a level that is far to high and abstract (frameworks, philosophy, theory). The industry needs a toolbox with techniques and practices that work. It is often about the small things: how to conduct an interview with a customer; where to find raw information (organizational charts, service descriptions, product documentation); how to validate requirements (through documents or through triangulation); how to document the results of a customer meeting (Minutes of Meeting). The industry is completely void when it comes to having a toolbox with techniques and methods such as these. It is too much theory and high-level talk. You have all these techniques in research (this questionnaire, open-ended interviews, structured interviews, observations), but the industry use post-its. "
320,"Transition from research to practice and the associated cost (overcoming management resistance)  Get researcher(s) embedded with real life system engineering teams and uncover new research areas.  Independent evaluations of system engineering processes and tools (obviously not all of them are equal), and the definition of true value metrics"
326,"team management, requirement management, and systems for managing requirement progress and elimination."
328,"Focus on Change and Version Control (Configuration Management) associated with changing requirements. Modifications to requirements can have an enormous impact on the design, verification, cost and schedule aspects of a project and this impact is often not adequately communicated because of poor change and version control processes."
342,from experience I have found that the alignment of the requirements to the vision and strategy is not always managed well. The Vision and Strategy is defined by one group of stakeholders and the requirements are elicited from another group of stakeholders. The Business Analysts do not always aske how the various requirements tie back to the Vision or Strategy. At the same time during the project life cycle as the requirements are changed to alignment to the strategy or vision is not necessarily revised or revisited.
346,"- automatic or semi automatic tracebility from first user requirement (later from issues) to code.  - guidelines for modelling from coarse to fine grained, templates for requirements on each level ..."
347,Design processes and their complexity. We are constantly trying to push software engineering into a linear process (even with agile) but it is and will Always will be a circular and reflective process. 
349,Automation in requirements engineering and usability requirements. 
371,How to set up requirements so that   1) At the most global level everything is described  2) The requirements engineers and the requirements users can track easily what is described up to which detail level   3) The requirements engineers and the requirement users can easily  zoom-in  and  zoom-out  between different detail levels.   In our agile environment that would help us much.
372,Dependencies and life-cycles of component technologies.
374,"- Human-centric (natural language supported, AI supported) assistance for formal specification and disambiguation of requirements with multifaceted inter-role linkage, that is, supporting that multi-disciplinary stakeholders collaborate on agile, computed processed, formalization of requirements  - Generic strategies for binding requirements to software concepts and entities, including information/data entities, in diverse application and technology domain"
383,Automatic structuring of requirements belonging to a complete system and detection of contradicting requirements or near duplicates
389,"Consider agile development process.  From the requirements known at the beginning of the project, 50% are not needed at the end of the project.  During the development process 50% new requirements are coming up as the customer understands more details of what he wants.  "
395,Main focus of my work is on working in an agile development environment but having a big set of requirement requests from the product requester and sponsor. Managing this difficult situation between agile development and waterfall-like requirement setting is key for my work.
409,-
411,No
415,methods for analysing how requirements cover the needs during the elicitation phase
416,Standardization and automation of requirements elicitation to define what happens between material is gathered and documented. 
423,- Requirements specification evolution (how could we update them in an easy way as requirements may change in agile contexts).  - How to convince practitioners that requirements specifications are more than  mandatory  documents but also useful  - How to convince practitioners that testing needs requirements to be specified  - How to convince practitioners that agile does not imply absence of requirements
438,"study of normative requirements and how they are translated to other requirements, which may lead to software or other kinds of realizations"
445,Interview.  Needs extraction  System Requirements approach extracted from need  Context clarification  Quality aspects at system level  
447,"1. Benefits definition, alignment, measurement, and realisation in the real world. Lots of people talk about this but the practice seems to be very light.  2. Practical transition to agile. We've been using agile for 5 years and it still feels like it all depends on the people involved and the client. This was much less so prior to 'agile'.  3. RE and design thinking. We have been successfully using design thinking to kick off projects for the past year. The blend into formal requirements is a little awkward as people are inspired and go through a flattening phase when we move into user stories etc at the end of the DT process."
448,The transition from waterfall to iterative approaches - for us and all stakeholders.
454,"Security, and if we introduce the security analysis techniques and security engineering practice in the early phase of RE cycle, maybe we will have a higher ROI."
466,"How to validate requirements (or specifications, prototypes, ...) with actual users to understand/validate the actual value they would have. Many requirements are implemented *before* getting feedback on their actual value meaning resources are wasted. "
484,"Standard documentation, communication methods, consistent releases"
490,"do the requirements are provided by the PO or a group of selected users or even personas?  what is the best way to show how this requirements will be made? through sketches, mockups, flow diagrams?  after the implementation the requirements correspond to the requirements of the client?  how can we test these correspondence?"
494,"A way to annotate code with requirements. Some time after development and because of team rotation knowledge is lost.  Why is doing this in that way? ,  When is this code executed? ,  Why this condition is being checked? ,  Can we delete this rare alternative path?  are usual questions after a while. "
500,Emphasize the updation of requirement and tracibility
510,- advanced methods  - Problem solving methods  - complex methods  - methods for complex products
512,The study of the requirements process and how they plan to gather the requirements from the identified key stakeholders.
515,Common understanding of the domain and business needs to start an ongoing dialog of Business needs and technical view to ensure good trade-off decisions
525,"How to track changes in requirements, the reason for the change and last but not least: how to communicate these changes to a team that is currently working with these requirements in short sprints"
526,A study that gives an overview which industires use model driven requirements engineering and what they experienced and what are the differences.  
544,Addressing the tacit knowledge problem.  Investigate impact of management support for the requirement task  Review effectivity of Agile methods as compared with traditional methods in the  accuracy  of requirements elicitation. Use real data.
545,"requirements must can be understand clearly for everyone, and must write all in document."
552,"As a general criteria: Check, that the needed prerequisites have a certain likelihood to be fulfilled (i.e. do not focus on too exotic project Settings, but also: do research with examples of reasonable size; solutions that work only on toy example size are of no benefit).   Potential topics/problems: Combining natural language and model-based specifications."
561,"I think it is important that how to integrate the requirements of complicated stakeholders.  And it is also important to derive real demands from statements of stakeholders.  In recent years, production technology (how to make a system) has developed and achieved high productivity, but we still trial and error about  what to make ."
563,What artifacts is useful to support in describing system over time and learn team what to do.
571,"How to figure out, what is just enough RE (A. Davis)"
578,Consistent Classifciation of requirements (functional / nonfunctional) f.e. categorization by Martin glinz; Consistent representation form: Selection of an appropriate Pattern for NL or a an appropriate modeling form
582,Ways to improve the requirement management processes and make it more efficient for development projects which involves cross competence teams.  
585,"A set of natural language fallacies that hide, or miscommunicate the real requirements is a necessary point in today's RE research"
589,"There is a huge need to organize requirements-related datasets, not only for automated mining but also for qualitative analysis."
590,How can we structure requirements in changing contexts? How can we select the necessary requirements engineering practices without overshooting the efforts? Which are methods to tailor requirements engineering practices to a given situation?   How can we cope with situation where a large part of the requirements engineering tasks need to be done by untrained persons? Can we provide them with guidance to improve? How can we support people in effectively reviewing requirements?  
593,"How to structure requirements in general, and how to enable reuse by reasonable structuring."
597,"-How to scale requirement engineering in agile development work (in mid sized or large organizations).  -How to do minimal, yet useful req handling in agile development work?  -How to make req handling in agile development work transparent/accessible to all involved parties of the development organization?"
618,"Integration of your techniques and models with Agile development methodologies and Agile architecture methods and tools. In the real-world, teams are organized in small agile teams orchestrated by architecture work. At both levels requirements are very relevant, but the tools used to specify and validate them IMHO are very diferent to what classical academic research on RE is concerned with. Therefore, analyse those methods and tools and try to provide solutions that are realistic to their problems; as I said, in agile development and agile architecture methods and tools."
620,how to capture and represent ideas regarding innovation projects.
634,- Interaction between clients and requirements analysts  - Requirements validation  - Effectiveness of certain requirements techniques
638,1) Techniques for identifying unstated needs  2) Techniques for identifying requirements/stories with potential hidden complexity (the icebergs)
642,"First of all I'll ask a factive way to meet both client's requests and dev team's requests. Requirements are often written in a business oriented view only, but a good requirement engineer has to keep in mind that he/she has to interface also with a dev team, an architect and some testers. So, first of all we have to find a factive way to present requirements for all groups in a clear and consistent manner.  Secondly, we are people that work together. Psicology and communication styles are really important."
643,How to capture/extract requirements based on behavioral metrics collected from users using the product developed/maintained by the software organization.
650,"The most important part of a requirement is defining it as one or more tasks. And the most difficult part of one task is to assure it's completely done. Therefore, I would say that some kind of guarantee (i.e.: an acceptance test) that the requirement is fulfilled, so the coder could check if s/he has done correctly (i.e.: running the test )"
666,Transitioning from classic development to agile development while maintaining an existing requirement base.
682,I think you could address the challenges related to the user experience and user journey.
716,First: Identify customer need and customer requirements.  Second: Set up scenarios how it shall be used and not to be used.  Third: Define the anatomy of the Product/system so you get an overall view of what to design according first and second step.   Fourth:   Choose a requirement strategy and tool if it not set Before.  Fifth: Identify the interfaces and document these  Six: Define and document the system requirements.   Seventh: Define and document the SW and HW etc requirements.  Eighth: Identify what can be sourced in and what to be designed in house.  Ninth: Do the design and start testing.  Tenth: Deliver Product / service.  Eleventh: Support the Product / service  
775,"I would like to suggest the following topics to them: 1. please work on a requirement search tool that can help clients suggest reference to similar well-documented systems features and specifications for reference; 2. Please work on natural language processing tools with embedded requirements analysis knowledge that can check for inconsistencies, dependencies, omissions in natural language requirements specifications, and extract key information for making architectural design decisions and selection of services. "
784,I think the most important thing is helping PM make sure which option is better: 1. PM determine what users like and need  2. PM cater to all users tastes. 
792,face to face interview skills for gain system requirement is needed.
852,I don't think requirement is used a lot in enterprise and IT companies.
885,Requirements always  changing due to business domain and logic changed   Also requirements changed might due to third party requirements changed.
890,"How could you train, improve the product owner role?  How to conduct the product owner role in a multi-stakeholder situtation?   "
906,"NLP and requirements quality assessment (to what degree, if at all, can it truly be automated? - and at what fidelity are the results?); semiformal techniques for functional safety requirements specification"
915,How agile thinking and agile methodology affect more traditional requirements engineering work.  Whats the level of good enough specification of requirements?
922,Improve the alignment between real needs and requirements
930,"A complete metamodel for the Re domain including hazard, security, use cases, products and product features, etc. Without such a model it is nearly impossible to determine that a requirement set is semantically complete and correct."
939,Examples of complex requirements that never resulted in failed tests or quality escapes.
944,"They should focus in write correctly the requirements, using some standards like IEEE, in that standard there are many features to consider, for example be careful with the number of verbs, do not use negative words, do not use superlatives, do not use adverbs etc."
965,Provide some guidelines and set of best practices that can/should be applied in projects with different dimensions.
995,They should first understand the context of my work area. It seems to me (just a feeling) that a lot of the work on requirements comes from a context where legal aspects are important (e.g. aviation) and/or where the development model is inspired by a mechanical history (e.g. cars). In other words not relevant to a lot (maybe most?) of software development done in the world.
1024,How to define customer value which is a main part of prioritization in agile environments. A practical approach that can easily be applied in any context would be helpful. So it might be helpful to research what approaches are successful and what are not (so successful).
1027,.
1029,I would like to have a way to relate the system requirements with the code that support those requirements
